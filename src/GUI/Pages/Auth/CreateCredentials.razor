@using LT.DigitalOffice.GUI.Services.Interfaces;
@using LT.DigitalOffice.GUI.Properties;

@page "/credentials/{Id:guid}";

@inject IUserService userService;
@inject IAuthService authService;
@inject NavigationManager UriHelper;

<EditForm Model="@_credentialsData" OnValidSubmit="@HandleValidSubmitAsync">
    <DataAnnotationsValidator />
    <div class="create-credentials_container">
        <div class="create-credentials_content">
            <h1 class="h1">@Resources.SiteName</h1>
            <div class="item-group">
                <label for="create-credentials_login">@Resources.LoginData<font color="red">*</font></label>
                <input @bind-value="_credentialsData.Login"
                       type="text"
                       class="form-control"
                       id="create-credentials_login"
                       @onkeyup="@(async (k) => {
                               if (k.Code == "Enter" || k.Code == "ArrowDown")
                                   await _passwordInput.FocusAsync(); })" />
                <ValidationMessage style="font-size: 0.7em;" For="() => _credentialsData.Login" />
            </div>
            <div class="item-group">
                <label for="create-credentials_password">@Resources.Password<font color="red">*</font></label>
                <input @bind-value="_credentialsData.Password"
                       @ref="_passwordInput"
                       type="password"
                       class="form-control"
                       id="create-credentials_password"
                       @onkeyup="@(async (k) => { if (k.Code == "Enter") await HandleValidSubmitAsync(); })" />
                <ValidationMessage style="font-size: 0.7em;" For="() => _credentialsData.Password" />
            </div>
            <p class="error_text">@_message</p>
            <button class="btn btn-primary" type="submit">@Resources.Login</button>
        </div>
    </div>
</EditForm>
